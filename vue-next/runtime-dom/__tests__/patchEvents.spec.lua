require("runtime-dom/src/patchProp")

local timeout = function()
  Promise(function(r)
    setTimeout(r)
  end
  )
end

describe(function()
  it('should assign event handler', function()
    local el = document:createElement('div')
    local event = Event('click')
    local fn = jest:fn()
    patchProp(el, 'onClick', nil, fn)
    el:dispatchEvent(event)
    el:dispatchEvent(event)
    el:dispatchEvent(event)
    expect(fn):toHaveBeenCalledTimes(3)
  end
  )
  it('should update event handler', function()
    local el = document:createElement('div')
    local event = Event('click')
    local prevFn = jest:fn()
    local nextFn = jest:fn()
    patchProp(el, 'onClick', nil, prevFn)
    el:dispatchEvent(event)
    patchProp(el, 'onClick', prevFn, nextFn)
    el:dispatchEvent(event)
    el:dispatchEvent(event)
    expect(prevFn):toHaveBeenCalledTimes(1)
    expect(nextFn):toHaveBeenCalledTimes(2)
  end
  )
  it('should support multiple event handlers', function()
    local el = document:createElement('div')
    local event = Event('click')
    local fn1 = jest:fn()
    local fn2 = jest:fn()
    patchProp(el, 'onClick', nil, {fn1, fn2})
    el:dispatchEvent(event)
    expect(fn1):toHaveBeenCalledTimes(1)
    expect(fn2):toHaveBeenCalledTimes(1)
  end
  )
  it('should unassign event handler', function()
    local el = document:createElement('div')
    local event = Event('click')
    local fn = jest:fn()
    patchProp(el, 'onClick', nil, fn)
    patchProp(el, 'onClick', fn, nil)
    el:dispatchEvent(event)
    expect(fn).tsvar_not:toHaveBeenCalled()
  end
  )
  it('should support event options', function()
    local el = document:createElement('div')
    local event = Event('click')
    local fn = jest:fn()
    local nextValue = {handler=fn, options={once=true}}
    patchProp(el, 'onClick', nil, nextValue)
    el:dispatchEvent(event)
    el:dispatchEvent(event)
    expect(fn):toHaveBeenCalledTimes(1)
  end
  )
  it('should support varying event options', function()
    local el = document:createElement('div')
    local event = Event('click')
    local prevFn = jest:fn()
    local nextFn = jest:fn()
    local nextValue = {handler=nextFn, options={once=true}}
    patchProp(el, 'onClick', nil, prevFn)
    patchProp(el, 'onClick', prevFn, nextValue)
    el:dispatchEvent(event)
    el:dispatchEvent(event)
    expect(prevFn).tsvar_not:toHaveBeenCalled()
    expect(nextFn):toHaveBeenCalledTimes(1)
  end
  )
  it('should unassign event handler with options', function()
    local el = document:createElement('div')
    local event = Event('click')
    local fn = jest:fn()
    local nextValue = {handler=fn, options={once=true}}
    patchProp(el, 'onClick', nil, nextValue)
    patchProp(el, 'onClick', nextValue, nil)
    el:dispatchEvent(event)
    el:dispatchEvent(event)
    expect(fn).tsvar_not:toHaveBeenCalled()
  end
  )
  it('should support native onclick', function()
    local el = document:createElement('div')
    local event = Event('click')
    window.__globalSpy = jest:fn()
    local fn = window.__globalSpy
    patchProp(el, 'onclick', nil, '__globalSpy(1)')
    el:dispatchEvent(event)
    window.__globalSpy = nil
    expect(fn):toHaveBeenCalledWith(1)
    local fn2 = jest:fn()
    patchProp(el, 'onclick', '__globalSpy(1)', fn2)
    el:dispatchEvent(event)
    expect(fn):toHaveBeenCalledTimes(1)
    expect(fn2):toHaveBeenCalledWith(event)
  end
  )
  it('should support stopImmediatePropagation on multiple listeners', function()
    local el = document:createElement('div')
    local event = Event('click')
    local fn1 = jest:fn(function(e)
      e:stopImmediatePropagation()
    end
    )
    local fn2 = jest:fn()
    patchProp(el, 'onClick', nil, {fn1, fn2})
    el:dispatchEvent(event)
    expect(fn1):toHaveBeenCalledTimes(1)
    expect(fn2):toHaveBeenCalledTimes(0)
  end
  )
end
)